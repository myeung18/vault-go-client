apiVersion: v1
kind: ServiceAccount
metadata:
  name: webapp
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: vault-user-role
rules:
  - apiGroups: [ "" ]
    resources: [ "secrets", "serviceaccounts" ]
    verbs: [ "get", "list" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: vault-user-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: vault-user-role
subjects:
  - kind: ServiceAccount
    name: webapp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault-go-client-tester
  labels:
    app: vault-go-client-tester
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      serviceAccountName: webapp
      containers:
        - name: vault-go-client-tester
          image: quay.io/myeung/vault-go-client:v0.0.1
          imagePullPolicy: Always
          env:
            - name: VAULT_ADDR
              value: "http://vault.vault.svc.cluster.local:8200"
            - name: JWT_PATH
              value: "/var/run/secrets/kubernetes.io/serviceaccount/token"
            - name: SERVICE_PORT
              value: "8080"
            - name: VAULT_SERVICE_ACCT
              value: webapp
            - name: VAULT_ROLE
              value: webapp
            - name: USER_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
